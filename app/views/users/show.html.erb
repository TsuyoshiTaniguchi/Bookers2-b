<div class='container px-5 px-sm-0'>
  <div class='row'>
    <div class='col-md-3'>
      <h2>User info</h2>
      <%= render 'info', user: @user %>
      <h2 class="mt-3">New book</h2>
      <%= render 'books/form', book: @book %>
    </div>
    <div class='col-md-8 offset-md-1'>
      <h2>Books</h2>
      <%= render 'books/index', books: @books %>

    <h2>7日間分の投稿数</h2>
<table class='table table-bordered'>
  <thead>
    <tr>
      <% @chart_dates.each do |date| %>
        <th><%= date %></th>
      <% end %>
    </tr>
  </thead>
  <tbody>
    <tr>
      <% @chart_counts.each do |count| %>
        <td><%= count %></td>
      <% end %>
    </tr>
  </tbody>
</table>


<h4>7日間の投稿数の比較</h4>

<canvas id="postsChart" style="width: 100%; max-height: 400px;"></canvas>

<div id="chart-data"
     data-dates="<%= @chart_dates.to_json %>"
     data-counts="<%= @chart_counts.to_json %>">
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>


<script>
document.addEventListener("turbolinks:load", function() {
  const chartDataElement = document.getElementById("chart-data");
  const canvas = document.getElementById("postsChart");

  if (!chartDataElement || !canvas) {
    console.warn("Chart.js のデータが見つかりません");
    return;
  }

  try {
    const ctx = canvas.getContext("2d");
    const dates = JSON.parse(chartDataElement.dataset.dates || "[]");
    const counts = JSON.parse(chartDataElement.dataset.counts || "[]");

    if (dates.length === 0 || counts.length === 0) {
      console.warn("Chart.js のデータが空です");
      return;
    }

    if (typeof window.myChart !== "undefined" && window.myChart instanceof Chart) {
      window.myChart.destroy();
    }

    window.myChart = new Chart(ctx, {
      type: 'line',
      data: {
        labels: dates,
        datasets: [{
          label: '投稿した本の数',
          data: counts,
          borderColor: "rgba(0,0,255,1)",
          backgroundColor: "rgba(0,0,0,0)",
          borderWidth: 2
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        scales: {
          yAxes: [{
            ticks: {
              beginAtZero: true,
              stepSize: 1
            }
          }]
        }
      }
    });

  } catch (error) {
    console.error("Chart.js のデータ処理中にエラーが発生しました:", error);
  }
});
</script>




</div>
</div>
</div>
